{"ast":null,"code":"import { v4 as uuid } from 'uuid';\nimport { createSlice } from '@reduxjs/toolkit'; // import { GET_ITEMS, ADD_ITEM, DELETE_ITEM } from '../actions/types'\n// const initialState = {\n//    items: [\n//       {id: uuid(), name: 'Milk' },\n//       {id: uuid(), name: 'Meat' },\n//       {id: uuid(), name: 'Gala' },\n//       {id: uuid(), name: 'Spagheti'},\n//    ]\n// }\n\nexport const ItemReducers = createSlice({\n  name: 'item',\n  initialState: {\n    items: [{\n      id: uuid(),\n      name: 'Milk'\n    }, {\n      id: uuid(),\n      name: 'Meat'\n    }, {\n      id: uuid(),\n      name: 'Gala'\n    }, {\n      id: uuid(),\n      name: 'Spagheti'\n    }]\n  },\n  reducers: {\n    GET_ITEMS: (state, action) => {\n      return { ...state,\n        items: action.payload\n      };\n    },\n    ADD_ITEM: (state, action) => {\n      return { ...state,\n        // items: [...state.items, action.payload]\n        items: state.push(action.payload)\n      };\n    },\n    DELETE_ITEM: (state, action) => {\n      return { ...state,\n        items: state.items.filter(item => item.id !== action.payload)\n      };\n    }\n  }\n});\nexport const {\n  GET_ITEMS,\n  ADD_ITEM,\n  DELETE_ITEM\n} = ItemReducers.actions;\nexport const selectItem = state => state.item.items;\nexport default ItemReducers.reducer; // function ItemReducers (state = initialState, action) {\n//    switch(action.type) {\n//       case GET_ITEMS:\n//          return {\n//             ...state,\n//             // items: action.payload\n//          }\n//       case DELETE_ITEM: \n//       return {\n//          ...state,\n//          items:  state.items.filter(item => item._id !==action.payload)\n//       }\n//       case ADD_ITEM:\n//          return {\n//             ...state,\n//             items: [...state.items, action.payload]\n//          }\n//       case 'TRANSACTION_ERROR':\n//          return {\n//             ...state,\n//             error: action.payload\n//          }\n//       default:\n//          return state \n//    }\n// }","map":{"version":3,"sources":["C:/Users/User/Documents/myExpressApp/React/mern_shopping_list/client/src/reducers/ItemReducers.js"],"names":["v4","uuid","createSlice","ItemReducers","name","initialState","items","id","reducers","GET_ITEMS","state","action","payload","ADD_ITEM","push","DELETE_ITEM","filter","item","actions","selectItem","reducer"],"mappings":"AAAA,SAAQA,EAAE,IAAIC,IAAd,QAAyB,MAAzB;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,YAAY,GAAGD,WAAW,CAAC;AACrCE,EAAAA,IAAI,EAAE,MAD+B;AAErCC,EAAAA,YAAY,EAAE;AACXC,IAAAA,KAAK,EAAE,CACJ;AAACC,MAAAA,EAAE,EAAEN,IAAI,EAAT;AAAaG,MAAAA,IAAI,EAAE;AAAnB,KADI,EAEJ;AAACG,MAAAA,EAAE,EAAEN,IAAI,EAAT;AAAaG,MAAAA,IAAI,EAAE;AAAnB,KAFI,EAGJ;AAACG,MAAAA,EAAE,EAAEN,IAAI,EAAT;AAAaG,MAAAA,IAAI,EAAE;AAAnB,KAHI,EAIJ;AAACG,MAAAA,EAAE,EAAEN,IAAI,EAAT;AAAaG,MAAAA,IAAI,EAAE;AAAnB,KAJI;AADI,GAFuB;AAUrCI,EAAAA,QAAQ,EAAE;AACPC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3B,aAAO,EACJ,GAAGD,KADC;AAEJJ,QAAAA,KAAK,EAAEK,MAAM,CAACC;AAFV,OAAP;AAIF,KANM;AAOPC,IAAAA,QAAQ,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC1B,aAAO,EACJ,GAAGD,KADC;AAEJ;AACAJ,QAAAA,KAAK,EAAEI,KAAK,CAACI,IAAN,CAAWH,MAAM,CAACC,OAAlB;AAHH,OAAP;AAKF,KAbM;AAcPG,IAAAA,WAAW,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAC7B,aAAO,EACJ,GAAGD,KADC;AAEJJ,QAAAA,KAAK,EAAGI,KAAK,CAACJ,KAAN,CAAYU,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACV,EAAL,KAAWI,MAAM,CAACC,OAA7C;AAFJ,OAAP;AAIF;AAnBM;AAV2B,CAAD,CAAhC;AAiCP,OAAO,MAAM;AAAEH,EAAAA,SAAF;AAAaI,EAAAA,QAAb;AAAuBE,EAAAA;AAAvB,IAAuCZ,YAAY,CAACe,OAA1D;AACP,OAAO,MAAMC,UAAU,GAAGT,KAAK,IAAIA,KAAK,CAACO,IAAN,CAAWX,KAAvC;AAIP,eAAeH,YAAY,CAACiB,OAA5B,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {v4 as uuid} from 'uuid'\r\nimport { createSlice } from '@reduxjs/toolkit'\r\n// import { GET_ITEMS, ADD_ITEM, DELETE_ITEM } from '../actions/types'\r\n\r\n// const initialState = {\r\n//    items: [\r\n//       {id: uuid(), name: 'Milk' },\r\n//       {id: uuid(), name: 'Meat' },\r\n//       {id: uuid(), name: 'Gala' },\r\n//       {id: uuid(), name: 'Spagheti'},\r\n//    ]\r\n// }\r\n\r\nexport const ItemReducers = createSlice({\r\n   name: 'item',\r\n   initialState: {\r\n      items: [\r\n         {id: uuid(), name: 'Milk' },\r\n         {id: uuid(), name: 'Meat' },\r\n         {id: uuid(), name: 'Gala' },\r\n         {id: uuid(), name: 'Spagheti'},\r\n      ]\r\n   },\r\n   reducers: {\r\n      GET_ITEMS: (state, action) => {\r\n         return {\r\n            ...state,\r\n            items: action.payload\r\n         }\r\n      },\r\n      ADD_ITEM: (state, action) => {\r\n         return {\r\n            ...state,\r\n            // items: [...state.items, action.payload]\r\n            items: state.push(action.payload)\r\n         }\r\n      },\r\n      DELETE_ITEM: (state, action) => { \r\n         return {\r\n            ...state,\r\n            items:  state.items.filter(item => item.id !==action.payload)\r\n         }\r\n      },\r\n   }\r\n});\r\n\r\nexport const { GET_ITEMS, ADD_ITEM, DELETE_ITEM } = ItemReducers.actions\r\nexport const selectItem = state => state.item.items\r\n\r\n\r\n\r\nexport default ItemReducers.reducer;\r\n\r\n\r\n// function ItemReducers (state = initialState, action) {\r\n//    switch(action.type) {\r\n//       case GET_ITEMS:\r\n//          return {\r\n//             ...state,\r\n//             // items: action.payload\r\n//          }\r\n//       case DELETE_ITEM: \r\n//       return {\r\n//          ...state,\r\n//          items:  state.items.filter(item => item._id !==action.payload)\r\n//       }\r\n//       case ADD_ITEM:\r\n//          return {\r\n//             ...state,\r\n//             items: [...state.items, action.payload]\r\n//          }\r\n//       case 'TRANSACTION_ERROR':\r\n//          return {\r\n//             ...state,\r\n//             error: action.payload\r\n//          }\r\n//       default:\r\n//          return state \r\n//    }\r\n// }\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}