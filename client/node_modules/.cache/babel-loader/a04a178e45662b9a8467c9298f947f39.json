{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\myExpressApp\\\\React\\\\mern_shopping_list\\\\client\\\\src\\\\components\\\\ShoppingList.js\",\n    _s = $RefreshSig$();\n\n// eslint-disable-next-line no-unused-vars\nimport { useState, useEffect } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { v4 as uuid } from 'uuid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GET_ITEMS, selectItem, ADD_ITEM, DELETE_ITEM } from '../reducers/ItemReducers'; // import { getItems } from '../actions/itemActions'\n\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShoppingList = () => {\n  _s();\n\n  const itemValue = useSelector(selectItem);\n  const [nameInput, setNameInput] = useState('');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(GET_ITEMS(itemValue)); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"dark\",\n        style: {\n          marginBottom: '2rem'\n        },\n        onClick: () => {\n          if (nameInput) {\n            dispatch(ADD_ITEM({\n              id: uuid(),\n              name: nameInput\n            }));\n            return;\n          }\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              style: {\n                position: 'absolute',\n                margin: '10px auto',\n                zIndex: '5'\n              },\n              value: nameInput,\n              onChange: e => setNameInput(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 22\n          }, this);\n        },\n        children: \"Add Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: /*#__PURE__*/_jsxDEV(TransitionGroup, {\n          className: \"shopping-list\",\n          children: itemValue.map(({\n            id,\n            name\n          }) => /*#__PURE__*/_jsxDEV(CSSTransition, {\n            timeout: 500,\n            classNames: \"fade\",\n            children: /*#__PURE__*/_jsxDEV(ListGroupItem, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: \"remove-btn\",\n                color: \"danger\",\n                size: \"sm\",\n                onClick: () => // setItems(items.filter(newitem => newitem.id !== id ))\n                dispatch(DELETE_ITEM(id)),\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 28\n              }, this), name]\n            }, id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 25\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 22\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ShoppingList, \"qTd3Ajpn7KMTxX8/0gSt3sHQN24=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ShoppingList;\nShoppingList.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  item: PropTypes.object.isRequired\n}; // const mapStateToProps = (state, ownProps) => {\n//    return {\n//       item: state.item\n//    }\n// }\n\nexport default ShoppingList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShoppingList\");","map":{"version":3,"sources":["C:/Users/User/Documents/myExpressApp/React/mern_shopping_list/client/src/components/ShoppingList.js"],"names":["useState","useEffect","Container","ListGroup","ListGroupItem","Button","CSSTransition","TransitionGroup","v4","uuid","useDispatch","useSelector","GET_ITEMS","selectItem","ADD_ITEM","DELETE_ITEM","PropTypes","ShoppingList","itemValue","nameInput","setNameInput","dispatch","marginBottom","id","name","position","margin","zIndex","e","target","value","map","propTypes","getItems","func","isRequired","item","object"],"mappings":"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","sourcesContent":["// eslint-disable-next-line no-unused-vars\r\nimport { useState, useEffect } from 'react'\r\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport {v4 as uuid} from 'uuid'\r\nimport {  useDispatch, useSelector } from 'react-redux'\r\nimport { GET_ITEMS, selectItem, ADD_ITEM, DELETE_ITEM } from '../reducers/ItemReducers'\r\n// import { getItems } from '../actions/itemActions'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ShoppingList = () => {\r\n   const itemValue = useSelector(selectItem)\r\n   const [nameInput, setNameInput] = useState('')\r\n   const dispatch = useDispatch();\r\n   useEffect(() =>{\r\n      dispatch(GET_ITEMS(itemValue))\r\n   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [])\r\n   return (\r\n      <div>\r\n         <Container>\r\n            <Button\r\n               color='dark'\r\n               style={{marginBottom: '2rem'}}\r\n               onClick={()=>{\r\n                  if(nameInput) {\r\n                     dispatch(ADD_ITEM({id: uuid(), name: nameInput})) \r\n                     return\r\n                  } \r\n                  return (\r\n                     <div >\r\n                        <input \r\n                           style={{position: 'absolute', margin: '10px auto', zIndex: '5'  }} \r\n                           value={nameInput} \r\n                           onChange={ (e)=> setNameInput(e.target.value)} \r\n                        />\r\n                        <span></span>\r\n                        \r\n\r\n                     </div>\r\n                     )\r\n                  }\r\n               }\r\n            >\r\n               Add Item\r\n            </Button>\r\n            <ListGroup>\r\n               <TransitionGroup className='shopping-list'>\r\n                  {itemValue.map(({id, name})=>(\r\n                     <CSSTransition key={id} timeout={500} classNames='fade'>\r\n                        <ListGroupItem key={id}>\r\n                           <Button\r\n                              className='remove-btn'\r\n                              color='danger'\r\n                              size='sm'\r\n                              onClick={\r\n                                 ()=> \r\n                                 // setItems(items.filter(newitem => newitem.id !== id ))\r\n                                 dispatch(DELETE_ITEM(id))\r\n                              }\r\n                           >\r\n                              &times;\r\n                           </Button>\r\n                           {name}\r\n                        </ListGroupItem>\r\n                     </CSSTransition>\r\n                  ))}\r\n               </TransitionGroup>\r\n            </ListGroup>\r\n         </Container>\r\n         \r\n      </div>\r\n   )\r\n}\r\n\r\nShoppingList.propTypes = {\r\n   getItems: PropTypes.func.isRequired,\r\n   item: PropTypes.object.isRequired\r\n}\r\n\r\n// const mapStateToProps = (state, ownProps) => {\r\n//    return {\r\n//       item: state.item\r\n//    }\r\n// }\r\nexport default ShoppingList\r\n"]},"metadata":{},"sourceType":"module"}